id: CompensationWorkflow
name: Compensation Workflow
version: '1.0'
states:
  - name: NewItemPurchase
    type: event
    onEvents:
      - eventRefs:
          - NewPurchase
        actions:
          - functionRef:
              refName: DebitCustomerFunction
              parameters:
                customerid: "{{ $.purchase.customerid }}"
                amount: "{{ $.purchase.amount }}"
          - functionRef:
              refName: SendPurchaseConfirmationEmailFunction
              parameters:
                customerid: "{{ $.purchase.customerid }}"
    compensatedBy: CancelPurchase
    transition:
      nextState: SomeNextWorkflowState
  - name: CancelPurchase
    type: operation
    usedForCompensation: true
    actions:
      - functionRef:
          refName: CreditCustomerFunction
          parameters:
            customerid: "{{ $.purchase.customerid }}"
            amount: "{{ $.purchase.amount }}"
      - functionRef:
          refName: SendPurchaseCancellationEmailFunction
          parameters:
            customerid: "{{ $.purchase.customerid }}"
events:
  - name: NewItemPurchase
    source: purchasesource
    type: org.purchases
functions:
  - name: DebitCustomerFunction
    operation: http://myapis.org/application.json#debit
  - name: SendPurchaseConfirmationEmailFunction
    operation: http://myapis.org/application.json#confirmationemail
  - name: SendPurchaseCancellationEmailFunction
    operation: http://myapis.org/application.json#cancellationemail
