id: vitalscheck
name: Car Vitals Check
version: '1.0'
specVersion: '0.8'
start: CheckVitals
states:
  - name: CheckVitals
    type: operation
    actions:
      - functionRef: checkTirePressure
      - functionRef: checkOilPressure
      - functionRef: checkCoolantLevel
      - functionRef: checkBattery
    transition: EvaluateChecks
  - name: EvaluateChecks
    type: switch
    dataConditions:
      - name: Some Evaluations failed
        condition: ".evaluations[?(@.check == 'failed')]"
        end:
          produceEvents:
            - eventRef: DisplayFailedChecksOnDashboard
              data: "${ .evaluations }"
    defaultCondition:
      transition: WaitTwoMinutes
  - name: WaitTwoMinutes
    type: event
    onEvents:
      - eventRefs:
          - StopVitalsCheck
        eventDataFilter:
          toStateData: "${ .stopReceived }"
    timeouts:
      eventTimeout: PT2M
    transition: ShouldStopOrContinue
  - name: ShouldStopOrContinue
    type: switch
    dataConditions:
      - name: Stop Event Received
        condition: ${ has("stopReceived") }
        end:
          produceEvents:
            - eventRef: VitalsCheckingStopped
    defaultCondition:
      transition: CheckVitals
events:
  - name: StopVitalsCheck
    type: car.events
    source: my/car
  - name: VitalsCheckingStopped
    type: car.events
    source: my/car
  - name: DisplayFailedChecksOnDashboard
    kind: produced
    type: my.car.events
functions:
  - name: checkTirePressure
    operation: mycarservices.json#checktirepressure
  - name: checkOilPressure
    operation: mycarservices.json#checkoilpressure
  - name: checkCoolantLevel
    operation: mycarservices.json#checkcoolantlevel
  - name: checkBattery
    operation: mycarservices.json#checkbattery
